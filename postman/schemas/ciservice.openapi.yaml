openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'ciservice api'
  description: ciservice api

servers:
  - url: http://localhost:8000/api
    description: Local dev server

paths:
  /jobs/{jobId}:
    parameters:
      - name: jobId
        description: The unique identifier of the job
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
    get:
      summary: Read a job
      responses:
        '200':
          description: The job corresponding to the provided `jobId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        404:
          description: No job found for the provided `jobId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a job
      requestBody:
        description: Job data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJob'
      responses:
        '200':
          description: Successfully updated
        404:
          description: No job found for the provided `jobId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a job
      responses:
        '204':
          description: Successfully deleted
        404:
          description: No job found for the provided `jobId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /jobs:
    get:
      summary: List jobs
      parameters:
        - name: page
          description: The number of pages to skip before starting to collect the result set
          in: query
          schema:
            $ref: '#/components/schemas/PageParam'
        - name: limit
          description: The numbers of items to return
          in: query
          schema:
            $ref: '#/components/schemas/LimitParam'
      responses:
        '200':
          description: The list of jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfJobs'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a job
      requestBody:
        description: Job data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJob'
      responses:
        '201':
          description: Created a job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    PageParam:
      type: integer
      format: int64
      # minimum: 0
      default: 0
    LimitParam:
      type: integer
      format: int64
      # minimum: 1
      # maximum: 100
      default: 20
    JobId:
      description: The unique identifier of a job
      type: integer
    Job:
      description: The Job object
      type: object
      required:
        - id
        - name
        - created_at
        - updated_at
      properties:
        id:
          $ref: '#/components/schemas/JobId'
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CreateJob:
      description: The object used to create a new Job
      type: object
      required:
        - name
      properties:
        name:
          type: string
    UpdateJob:
      description: The object used to update an existing Job
      type: object
      required:
        - name
      properties:
        name:
          type: string
    ArrayOfJobs:
      type: object
      required:
        - results
        - limit
        - page
        - count
        - total
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Job'
        limit:
          type: integer
        page:
          type: integer
        count:
          type: integer
        total:
          type: integer
    Error:
      type: object
      required:
        - status
        - reason
        - method
        - uri
        - timestamp
      properties:
        status:
          description: The HTTP status code
          type: integer
        reason:
          description: A human readable status mesage
          type: string
        method:
          description: The HTTP method
          type: string
        uri:
          description: The request URI
          type: string
        timestamp:
          description: The timestamp of the error
          type: string
          format: date-time
